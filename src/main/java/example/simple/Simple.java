// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/main/proto/simple.proto

package example.simple;

public final class Simple {
  private Simple() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SimpleMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:example.simple.SimpleMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>bool is_simple = 2;</code>
     * @return The isSimple.
     */
    boolean getIsSimple();

    /**
     * <code>string name = 3;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @return A list containing the sampleList.
     */
    java.util.List<java.lang.Integer> getSampleListList();
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @return The count of sampleList.
     */
    int getSampleListCount();
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @param index The index of the element to return.
     * @return The sampleList at the given index.
     */
    int getSampleList(int index);
  }
  /**
   * Protobuf type {@code example.simple.SimpleMessage}
   */
  public  static final class SimpleMessage extends
      com.google.protobuf.GeneratedMessageLite<
          SimpleMessage, SimpleMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:example.simple.SimpleMessage)
      SimpleMessageOrBuilder {
    private SimpleMessage() {
      name_ = "";
      sampleList_ = emptyIntList();
    }
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }
    /**
     * <code>int32 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(int value) {
      
      id_ = value;
    }
    /**
     * <code>int32 id = 1;</code>
     */
    private void clearId() {
      
      id_ = 0;
    }

    public static final int IS_SIMPLE_FIELD_NUMBER = 2;
    private boolean isSimple_;
    /**
     * <code>bool is_simple = 2;</code>
     * @return The isSimple.
     */
    @java.lang.Override
    public boolean getIsSimple() {
      return isSimple_;
    }
    /**
     * <code>bool is_simple = 2;</code>
     * @param value The isSimple to set.
     */
    private void setIsSimple(boolean value) {
      
      isSimple_ = value;
    }
    /**
     * <code>bool is_simple = 2;</code>
     */
    private void clearIsSimple() {
      
      isSimple_ = false;
    }

    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.String name_;
    /**
     * <code>string name = 3;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return name_;
    }
    /**
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(name_);
    }
    /**
     * <code>string name = 3;</code>
     * @param value The name to set.
     */
    private void setName(
        java.lang.String value) {
      value.getClass();
  
      name_ = value;
    }
    /**
     * <code>string name = 3;</code>
     */
    private void clearName() {
      
      name_ = getDefaultInstance().getName();
    }
    /**
     * <code>string name = 3;</code>
     * @param value The bytes for name to set.
     */
    private void setNameBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      name_ = value.toStringUtf8();
      
    }

    public static final int SAMPLE_LIST_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList sampleList_;
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @return A list containing the sampleList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getSampleListList() {
      return sampleList_;
    }
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @return The count of sampleList.
     */
    @java.lang.Override
    public int getSampleListCount() {
      return sampleList_.size();
    }
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @param index The index of the element to return.
     * @return The sampleList at the given index.
     */
    @java.lang.Override
    public int getSampleList(int index) {
      return sampleList_.getInt(index);
    }
    private int sampleListMemoizedSerializedSize = -1;
    private void ensureSampleListIsMutable() {
      com.google.protobuf.Internal.IntList tmp = sampleList_;
      if (!tmp.isModifiable()) {
        sampleList_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @param index The index to set the value at.
     * @param value The sampleList to set.
     */
    private void setSampleList(
        int index, int value) {
      ensureSampleListIsMutable();
      sampleList_.setInt(index, value);
    }
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @param value The sampleList to add.
     */
    private void addSampleList(int value) {
      ensureSampleListIsMutable();
      sampleList_.addInt(value);
    }
    /**
     * <code>repeated int32 sample_list = 4;</code>
     * @param values The sampleList to add.
     */
    private void addAllSampleList(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureSampleListIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, sampleList_);
    }
    /**
     * <code>repeated int32 sample_list = 4;</code>
     */
    private void clearSampleList() {
      sampleList_ = emptyIntList();
    }

    public static example.simple.Simple.SimpleMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static example.simple.Simple.SimpleMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static example.simple.Simple.SimpleMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static example.simple.Simple.SimpleMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(example.simple.Simple.SimpleMessage prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code example.simple.SimpleMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          example.simple.Simple.SimpleMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:example.simple.SimpleMessage)
        example.simple.Simple.SimpleMessageOrBuilder {
      // Construct using example.simple.Simple.SimpleMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return instance.getId();
      }
      /**
       * <code>int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <code>bool is_simple = 2;</code>
       * @return The isSimple.
       */
      @java.lang.Override
      public boolean getIsSimple() {
        return instance.getIsSimple();
      }
      /**
       * <code>bool is_simple = 2;</code>
       * @param value The isSimple to set.
       * @return This builder for chaining.
       */
      public Builder setIsSimple(boolean value) {
        copyOnWrite();
        instance.setIsSimple(value);
        return this;
      }
      /**
       * <code>bool is_simple = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsSimple() {
        copyOnWrite();
        instance.clearIsSimple();
        return this;
      }

      /**
       * <code>string name = 3;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        return instance.getName();
      }
      /**
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        return instance.getNameBytes();
      }
      /**
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        copyOnWrite();
        instance.setName(value);
        return this;
      }
      /**
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        copyOnWrite();
        instance.clearName();
        return this;
      }
      /**
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setNameBytes(value);
        return this;
      }

      /**
       * <code>repeated int32 sample_list = 4;</code>
       * @return A list containing the sampleList.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getSampleListList() {
        return java.util.Collections.unmodifiableList(
            instance.getSampleListList());
      }
      /**
       * <code>repeated int32 sample_list = 4;</code>
       * @return The count of sampleList.
       */
      @java.lang.Override
      public int getSampleListCount() {
        return instance.getSampleListCount();
      }
      /**
       * <code>repeated int32 sample_list = 4;</code>
       * @param index The index of the element to return.
       * @return The sampleList at the given index.
       */
      @java.lang.Override
      public int getSampleList(int index) {
        return instance.getSampleList(index);
      }
      /**
       * <code>repeated int32 sample_list = 4;</code>
       * @param value The sampleList to set.
       * @return This builder for chaining.
       */
      public Builder setSampleList(
          int index, int value) {
        copyOnWrite();
        instance.setSampleList(index, value);
        return this;
      }
      /**
       * <code>repeated int32 sample_list = 4;</code>
       * @param value The sampleList to add.
       * @return This builder for chaining.
       */
      public Builder addSampleList(int value) {
        copyOnWrite();
        instance.addSampleList(value);
        return this;
      }
      /**
       * <code>repeated int32 sample_list = 4;</code>
       * @param values The sampleList to add.
       * @return This builder for chaining.
       */
      public Builder addAllSampleList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllSampleList(values);
        return this;
      }
      /**
       * <code>repeated int32 sample_list = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampleList() {
        copyOnWrite();
        instance.clearSampleList();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:example.simple.SimpleMessage)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new example.simple.Simple.SimpleMessage();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "id_",
              "isSimple_",
              "name_",
              "sampleList_",
            };
            java.lang.String info =
                "\u0000\u0004\u0000\u0000\u0001\u0004\u0004\u0000\u0001\u0000\u0001\u0004\u0002\u0007" +
                "\u0003\u0208\u0004\'";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<example.simple.Simple.SimpleMessage> parser = PARSER;
          if (parser == null) {
            synchronized (example.simple.Simple.SimpleMessage.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<example.simple.Simple.SimpleMessage>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:example.simple.SimpleMessage)
    private static final example.simple.Simple.SimpleMessage DEFAULT_INSTANCE;
    static {
      SimpleMessage defaultInstance = new SimpleMessage();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        SimpleMessage.class, defaultInstance);
    }

    public static example.simple.Simple.SimpleMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SimpleMessage> PARSER;

    public static com.google.protobuf.Parser<SimpleMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
